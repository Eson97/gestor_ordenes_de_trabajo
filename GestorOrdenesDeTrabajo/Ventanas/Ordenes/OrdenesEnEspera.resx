<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        zITddvsfO7zBVzMxBcEAAAAASUVORK5CYII=
</value>
  </data>
</root>