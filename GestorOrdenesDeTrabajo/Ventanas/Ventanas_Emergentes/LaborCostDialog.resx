<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAC0AAAAtCAYAAAA6GuKaAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAOSSURBVGhDzZlPSBRRHMe1ksoiL1FYVESdgqKMTl07FUEEEgVLtrvu6oAH8SJE5qGoQ+BBKoqK
        Aq2sUyUKQh069YdACgoqIioK+od/Qjuk9fk938j0fLozuzO784UPb+a93+/3vjv7ZmZntqxUam5uXpzN
        Zg9mMplb8A7GYQwG4WRDQ8MKHVp6Yai6vr7+PO0I/LXBh+lpb29foFNKJ8xUwHH45ZqzESfDyzFz3zRo
        wjdwOxaG0+n0Sgy9NQ2axOYIizB0xzRoEjfDNaZBC31+DdfW1s4nfrnejUas0TbDoI1OHT6nxDDfSBfx
        J3SXP5EgV4A9cA4ewCCFHtJepj1QV1e3SIcq0X8FbEZNWnSKVfoId+vYJ7o7twjeB6914mx8xnxGp0iO
        fDhbnA2rcTHMN3bdEzeih2YX620eSac9STnB+EXJZfuwOZaD/4zLWqfvhhEzrIft0oYvGUl+GJOlQrsW
        Jj39flDGteGbxpjwUpmzqQDDCo72XqnDdq85lgtyz9L2m/0CY13KoKlCDZM70NTUtJBS5ewHNp2DQ1Mu
        PSrUsOYrbJZ61EqyPeEZK4RRDsYyZdRVSIZdojA+45ouX2WQS5Qfpo2zFo+wXYjxMcdx1iinrujsMILC
        IpQjTm6bMuqKjoQtMEQKMk7OY9oKZVaUSCSW0PHFGxQR+RqXn7XVyqwrOrKegKgxjfey1u/RznYDumt9
        VmQg7OtoLqaNu0qlUuvoa4ROuABHMbtND88UAR/BVjxKZhgPJJJ/e4oVk/yNk/jdU6jYfGNtb9VW/IvE
        Z0ahYvMcG+VTbnyKpFNGkVIQbJlwydlE0h+jSFFhiezSdvyLxKtmoSIyweVttbbiXyRWwStPoWLSrW0E
        F8kb4JOnWOSwLAZoq7SF/MSdaSNFojT+Ru50tPJkn//NxVSUxjnpe/Q04YiiNRRNyXZExkfT6fQWNVkY
        oqC8cxsC+bXVKH0hGB+FM3rddkg9NVkYomAlvAd3srCMv1ATRCGKtxiTCWEYV/mRiOJPjclcghiXd3zu
        +E9oJS3Y74kgYoJhPZkNP8bHuYztlBeFnGjr2a9UhaMUk8gJaBrxMsnJ5EhsMplcxba8F5EHB3mu7Gd/
        hypUTHGZy/kHDsgRPyYvBXVaaYXp/YbBuXgUG+OYcd+yz8UQa3a7Tim95A0na/OaxajLh1gZ9oqlshuD
        ffAD5J9VeRRrdRxnqQ6JgcrK/gEuJG/vruif/QAAAABJRU5ErkJggg==
</value>
  </data>
</root>