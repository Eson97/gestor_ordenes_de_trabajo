<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbImg.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAARlSURBVFhH3ZjLb1VVFMbLUwaizkBGKDgzBIRCeIwgYoNNEPGKDqSlz9smjU58MCA0oSgNGA3g
        2LGOdCamEGIiVSdKef4BhEcChGdo07Tw+w7f7b2Xe/Z59OGAL/ly7lnr22uts/c+++x965579PT0vNTe
        3l4Pd3Z0dDR1dnbu1m+ua+Sz7P9FsVhcRTFH4BAch48DlO8sxR6m6JVuPnMg0XYS/V2R/Bw8jr0IGyh8
        o6jftv2A/7z1j7kfpH2jw00fCPwGCQac6Bbsa21tXW53Ktz+ILztGCfgMrunBoJ/TLB7cBj2dXd3v2hX
        brS0tCwk3tfEGYF3YcGuyYHh2EsQDeVFhu5Nm6vAi/ACSd9G8xXX77l+R7tPu7q6XrekBm1tbSvQXXbs
        L2zOBxen4RjQk9s8gd7e3tn4PoMa8miOPcNRuC/U43rD8Z+yNl+RHlY93YB6yOZKzELzo4On8aEeVm2e
        Ni2jubl5AX4VOY7mQ5uTQWJNaM25C3E9JxDsI/xxxSTxczevgntSw303aVpMgAJPIh4OzTkB/0UYV0QS
        74SG23NyhNy/2RQPRO8pGD10wKYaEGyRE+YmBTQ4TA3w6e2W7l2baoHzH3gzaSkh0BYHyk3a7nGYGnio
        b6MZtKka9MxqBUnqPQHN1lLCvCR5j8PEAo0Wc9VQ+1nE+C1OvbmJKzwPsllBJkNyfOIwseAB9IKOcz1s
        Uxk49F0d8m0QvDxLSwknwU0OEwQafbv/8+1TsB69glG9d8ymJMxCp2UoroAkjoaWrUrQe9pgjGtO2hRV
        vc5BOm0KolAozEd3w/o8vKm2DhMEui7pmQ71NkXzT5tNBdlqUxBoNlmbm9qKOUwQ9GCDtNS0w6YoaZOM
        ONfbFARJ1pYS5mVVrwSAZoP1TTZFxmYZsxToIb7uIHl4LcsQqwbrywVi/MDG1CEWeKB30D5ymyyUNlPs
        0hBzfd+m8rBh7LApFeh/VpssJO5PbpYKtEW3WWNTlOxlqC3PUZtSgV5v/piCpXBMHeBmqUB/XG2qlhkB
        o05oZ32bCeijT1MK+yzPBPRaqP/1bRkYdYxM/dRVAu08GFdUJedZngqGVZ86tem3qQyNuZwMc+JmoRLe
        ET9bUBWlsTwV6KMRYUqssqkaOP+Ct7Ke3NAtVsAkSmN5IvQZRK9j6Z821YJe3O7AB20Kgl3Na+j/sD6J
        p+mRpW4WBLpvpCfmNpvigSDa8msbbtMEWGjnKADT4Bc0OrXFFRRHaX+lXSOnwbkONwHsK/HrrHzCpjB0
        cEGo3cql0qvO71ehnvAKjCsgD6/CfoZ0iWNriYsOTRoV2VJBL+2igTaO6s398D6MSzYVPoC9MDp2wnz/
        MtDtpYP7jJOO+NJp88FF6uliA08DFTv2vJwZBCjAmRjie3TATqeZGjR5CVj6+23KpLDfsyw9uUHgRubL
        YFzSjDwDwwfz6QJJ3oL9UCfBpB2NfEM82KHg52umobWSAvQn+g5Ygn7X12yZnj/U1T0BnQiwlRa01hgA
        AAAASUVORK5CYII=
</value>
  </data>
</root>