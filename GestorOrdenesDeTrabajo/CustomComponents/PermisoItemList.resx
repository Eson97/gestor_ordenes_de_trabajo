<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAABGdBTUEAALGPC/xhBQAAA0xJREFUWEfd
        mD1oFFEUhVclKqgo/hV2YuEPojZiYyGIWqggakAD0Wyyu8lmiSBiYRoXEUEtdEHBRtQUVhFrwSKFCoIm
        WqQQ1CAqIqiNiwZC1HPj2fD25r63z0kxwQMfm8w79+6ZNzNvZifzX6hQKCwGBzo7O4/lcrn13DwzlM/n
        9yHcZ/Dboa+5uXkuLekJQdaBH04wl/O0pSeEuK1CuYx2d3cvpDUdIcQTFaqOrq6ujbSmI4To16Ecxkul
        0jJa0xFC7FWhXO7Tlq4QpBeMOcGEwWw2u4KW9IX1bzNCnQMV0AKaOJS+2tvbV2EtzCPURQY8jX+3cDg9
        tba2LsDMXUcgfXhrDKR2V8GsLcIsPTVCab6BbSzzCjuyCb4b4DX4ybrH4JRMBG3xQrg7KLYCWbzv6OhY
        ytI64XY4B+OXwLjj13wE21nSWNzbX06DhuBUuMDyOmHspvZ6GAVxIWG84hTG8qVcLs9miwkh9FHDN4Tt
        u/BZAvrc/hB1uGEcUoVR6Csb215pj4TjsIzf0+PgJIf9gklOYF3YEHz5QbbIyD3a8oCSjPPcnDIR2MlH
        Ew1CgjF0QofIsYUc3sPGuCCHVWbuhbPN5Stb+GUURYFQBbaQHsf1eCRVtvDLKIrCDYi/d1qeCIbZwi+j
        KAo3oFyN2PZdexqBHlfZwi+rMAY3oEi+zPIFGEPNBpb7ZRRGoQO2tbUtwfa32hfgLEvDMgqj0AFFxWJx
        LcZGtNegIksPy8IyiqOwAoo4k/KYVnX9Di9pjRMWyyMoGlZNQlQR7jI+l7PFFOH+vhrj5kyi9hlt8ZL7
        Kor7dDODKu4aK1lmqqenZx58b1TdJIkCijCTZ6yGihHag4JPfnzJE8uUHokDyjmlmxk8pz0oHpGHqnaC
        6czgIauh4gHtXjGc9w1F4oA4t3ZYDV2wE3dp90qWD/FZ9ULigHyyNps6XKM9KPiawIBTN0nigPJz02qo
        KNMeFHy7gfmWLHFALLDzrYaKE7R7xWXmnapz6aX134Vi3+pfo4XWoOCT94yfnLoaFVqSCQ1Cey4XyR5a
        Gwr+upA4tLewedbf0YRCo8FaQwsE3EprlFBTC9kf/XAQEvZyPyj4kAcBWqOFcGvAzHn5ND1lMn8AxL6I
        jYwrc2EAAAAASUVORK5CYII=
</value>
  </data>
</root>