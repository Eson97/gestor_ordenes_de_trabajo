<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbPiezaImg.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAQ4SURBVFhH5ZhpiI1RGMdnMLayxBTJVsMHhUgiskRRzKQpk6VomsVsJo01ahg0StlCiUiRyAe7
        D0gZsoQmFGOdDxLxAcm+/57Xc+8977nn3nFfd4zyr3/n3PP8z/M877lne9+U/xLFxcX9i4qK5ghBjjb/
        OyCpO/BHiAUFBaPU1ORILSwszCSp72aCcE9ubm5H1TQNGKXhJFJnJWbyLazMyclprl0aH4zWZoK+gafg
        Z+hKzEfm5XXKB/AJTFdXyQfJDSLAVwn6B9yq7pIPnB+zggXhF6ZGd3WZXDCCCx0BTb6CD6G9YEzeqKio
        aKMukw8CHLUChrgFpomGOTeauiyQKF1paWlXz1FjgSCyOOzAL6GXXAj83mDYw8zPz++lksYBQS7YQeEj
        NYfBKC5x6GQD76eSxgFBDthB4Xf5W1WSwr7XkrablibEDipLPnA+AD43gpl8B+VvXQxjJSesVHfJB6N0
        1hEwCDPUZXKB4xIrUBDWVlVVNVOXwYCTBfCbOvwIJ0i7nKnUb2l7IJpzNTBwdNV0yga9TU1iyyDIDO5/
        valvN3UxWEf/oazecZSZ6iYYcDAdh9esAMJv2E6S1EiVhiEjgu2Io0897aWUbVWaOHDeFwdbZEQo96vj
        ePxK0NWUcm3eWF5e3l78yJzit2zWYa08rBfkT4Cjc6bTREkS69WVjP5SHvS6ENsZuaxyrPWgbia+T+UN
        A4fZRseg/MTR1UddRoEYhZb+PaPeSs3xQd/lVudAZMQmqcswZOrA3dg/2HpYj20+pe/sjoIISNI1uYXy
        t8xlUYylrIZftN3mKnWXSn0FXARlr5Qbt0sfJklehlPJYb2scPXjB8JldkchnbJV4gFHa2LoJoqd+kzb
        liCf5uXltfOCmSCAvF9EdbDFOpJROhKfLZdP6o9tWwBWa7gIaKyyRB5JfIRKPPB7nktHglm6UmO+PNH3
        NKVcINZCeWmKpTui4SLAILdgV4d7sinLSMo84bdc5aN0OM0VP2imuOy0L/ECKWTrob3W1sHbZWVlnVX2
        Czi3t4AglJEbBtONthDrCJP6K1oErunCgxxScwTkJ8eQTxiQwwja39G+X0P5IKePQ3tRzRHQmAbvGqIg
        PCi+mArdHLYrXiALDIy8W/u0jOBxNfuBeAyCS3AdjHcLNnkChzsoa0IvQOxjAy2NR3RZXiCFntlR79bo
        zmNroTI3mMCtEctKe212NihbSQlS37yiTebfC9XY/ATXksB4OI16jWHzkcEKX+niQlYuHe5bDg7HekJG
        sRP2Bk+O3+AuddkweNpNZmeebpaanEDvfMVMgG8T+hwir42szMF0GiIrlKao7cKE3FAIIl8cDvAwOynj
        ffoI8RkPJkeoXPmK1NXfAQEnw1iLTublXh6+i8qbDozQSis5+XTXU81ND93Azb/7gpr+HZBUhsxlIfXf
        +OyRkvIT1QBBSHlq0LAAAAAASUVORK5CYII=
</value>
  </data>
</root>