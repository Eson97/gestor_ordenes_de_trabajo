<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbPiezaImg.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAABGdBTUEAALGPC/xhBQAABDhJREFUWEfl
        mGmIjVEYx2cwtrLEFMlWwweFSCKyRFHMpCmTpWiaxWwmjTVqGDRK2UKJSJHIB7sPSBmyhCYUY50PEvEB
        yb7/ntdz7z3vuefecV93jPKvf+fc8/zP8zzvuWd735T/EsXFxf2LiormCEGONv87IKk78EeIBQUFo9TU
        5EgtLCzMJKnvZoJwT25ubkfVNA0YpeEkUmclZvItrMzJyWmuXRofjNZmgr6Bp+Bn6ErMR+bldcoH8AlM
        V1fJB8kNIsBXCfoH3Krukg+cH7OCBeEXpkZ3dZlcMIILHQFNvoIPob1gTN6oqKhooy6TDwIctQKGuAWm
        iYY5N5q6LJAoXWlpaVfPUWOBILI47MAvoZdcCPzeYNjDzM/P76WSxgFBLthB4SM1h8EoLnHoZAPvp5LG
        AUEO2EHhd/lbVZLCvteStpuWJsQOKks+cD4APjeCmXwH5W9dDGMlJ6xUd8kHo3TWETAIM9RlcoHjEitQ
        ENZWVVU1U5fBgJMF8Js6/AgnSLucqdRvaXsgmnM1MHB01XTKBr1NTWLLIMgM7n+9qW83dTFYR/+hrN5x
        lJnqJhhwMB2H16wAwm/YTpLUSJWGISOC7YijTz3tpZRtVZo4cN4XB1tkRCj3q+N4/ErQ1ZRybd5YXl7e
        XvzInOK3bNZhrTysF+RPgKNzptNESRLr1ZWM/lIe9LoQ2xm5rHKs9aBuJr5P5Q0Dh9lGx6D8xNHVR11G
        gRiFlv49o95KzfFB3+VW50BkxCapyzBk6sDd2D/YeliPbT6l7+yOgghI0jW5hfK3zGVRjKWshl+03eYq
        dZdKfQVcBGWvlBu3Sx8mSV6GU8lhvaxw9eMHwmV2RyGdslXiAUdrYugmip36TNuWIJ/m5eW184KZIIC8
        X0R1sMU6klE6Ep8tl0/qj21bAFZruAhorLJEHkl8hEo88HueS0eCWbpSY7480fc0pVwg1kJ5aYqlO6Lh
        IsAgt2BXh3uyKctIyjzht1zlo3Q4zRU/aKa47LQv8QIpZOuhvdbWwdtlZWWdVfYLOLe3gCCUkRsG0422
        EOsIk/orWgSu6cKDHFJzBOQnx5BPGJDDCNrf0b5fQ/kgp49De1HNEdCYBu8aoiA8KL6YCt0ctiteIAsM
        jLxb+7SM4HE1+4F4DIJLcB2Mdws2eQKHOyhrQi9A7GMDLY1HdFleIIWe2VHv1ujOY2uhMjeYwK0Ry0p7
        bXY2KFtJCVLfvKJN5t8L1dj8BNeSwHg4jXqNYfORwQpf6eJCVi4d7lsODsd6QkaxE/YGT47f4C512TB4
        2k1mZ55ulpqcQO98xUyAbxP6HCKvjazMwXQaIiuUpqjtwoTcUAgiXxwO8DA7KeN9+gjxGQ8mR6hc+YrU
        1d8BASfDWItO5uVeHr6LypsOjNBKKzn5dNdTzU0P3cDNv/uCmv4dkFSGzGUh9d/47JGS8hPVAEFIeWrQ
        sAAAAABJRU5ErkJggg==
</value>
  </data>
</root>